// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@sunready.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/projects/3d": {
            "post": {
                "description": "Creates a 3D model from Google Earth data and calculates energy requirements and costs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create a 3D solar project with energy calculations",
                "parameters": [
                    {
                        "description": "Project details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Create3DProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.Create3DProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/projects/3d/{id}": {
            "get": {
                "description": "Retrieves the status and details of a 3D solar project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get 3D project status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "House ID",
                        "name": "house_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response structure from LightFusion API",
                        "schema": {
                            "$ref": "#/definitions/client.Status3DProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all companies with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "List all companies",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by referred by user ID",
                        "name": "referred_by_user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompaniesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new company with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Create a new company",
                "parameters": [
                    {
                        "description": "Company details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/companies/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new company and migrates the main user and their descendants to it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Add company with user migration",
                "parameters": [
                    {
                        "description": "Company and user details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AddCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/companies/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all companies without pagination with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get all companies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by referred by user ID",
                        "name": "referred_by_user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompaniesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/companies/slug/{slug}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a company by its slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get company by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get company by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a company's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Update company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a company by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Delete company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all deals with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "List all deals",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DealsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new deal with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Create a new deal",
                "parameters": [
                    {
                        "description": "Deal details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDealRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.DealResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals/company/{company_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of deals for a specific company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "List deals by company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DealsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals/company/{company_id}/signed": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of signed deals for a company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "List signed deals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DealsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals/uuid/{uuid}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a deal by its UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Get deal by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deal UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DealResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a deal by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Get deal by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DealResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a deal's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Update deal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deal update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateDealRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DealResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a deal by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Delete deal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals/{id}/archive": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Archive a deal by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Archive a deal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deals/{id}/unarchive": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Unarchive a deal by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deals"
                ],
                "summary": "Unarchive a deal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "client.Adder": {
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "AllSystemSizes": {
                    "type": "boolean"
                },
                "Category": {
                    "type": "string"
                },
                "CategoryID": {
                    "type": "integer"
                },
                "CategoryName": {
                    "type": "string"
                },
                "CompanyID": {
                    "type": "integer"
                },
                "Cost": {
                    "type": "number"
                },
                "CostType": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "CustomPrice": {
                    "type": "number"
                },
                "ExpiredAt": {},
                "ID": {
                    "type": "integer"
                },
                "IsAutomatic": {
                    "type": "boolean"
                },
                "LenderMapping": {
                    "type": "string"
                },
                "MaxSystemSize": {
                    "type": "integer"
                },
                "MinSystemSize": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Quantity": {
                    "type": "integer"
                },
                "States": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "client.PriceBreakdown": {
            "type": "object",
            "properties": {
                "base_price_per_watt": {
                    "type": "number"
                },
                "default_base_price": {
                    "type": "number"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/client.PriceItem"
                    }
                },
                "minimum_base_price": {
                    "type": "number"
                },
                "total_amount": {
                    "type": "number"
                },
                "total_amount_without_dealer_fee": {
                    "type": "number"
                },
                "total_fee": {
                    "type": "number"
                },
                "total_price_per_watt": {
                    "type": "number"
                },
                "total_price_per_watt_financed": {
                    "type": "number"
                }
            }
        },
        "client.PriceItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "client.Status3DProjectResponse": {
            "type": "object",
            "properties": {
                "adders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/client.Adder"
                    }
                },
                "inverter": {},
                "panel": {},
                "price_breakdown": {
                    "$ref": "#/definitions/client.PriceBreakdown"
                },
                "storage": {}
            }
        },
        "handler.AddCompanyRequest": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string",
                    "example": "New Solar Company"
                },
                "main_user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "handler.AddressRequest": {
            "type": "object",
            "properties": {
                "Postalcode": {
                    "type": "string",
                    "example": "94102"
                },
                "city": {
                    "type": "string",
                    "example": "San Francisco"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "state": {
                    "type": "string",
                    "example": "CA"
                },
                "street": {
                    "type": "string",
                    "example": "123 Solar Street"
                }
            }
        },
        "handler.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {}
            }
        },
        "handler.CompaniesResponse": {
            "type": "object",
            "properties": {
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Company"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.CompanyResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/models.Company"
                }
            }
        },
        "handler.Create3DProjectRequest": {
            "description": "Request body for creating a 3D solar project with energy calculations",
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/handler.AddressRequest"
                },
                "consumption": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        800,
                        850,
                        900,
                        950,
                        1000,
                        1050,
                        1100,
                        1150,
                        1200,
                        1250,
                        1300,
                        1350
                    ]
                },
                "hardware": {
                    "$ref": "#/definitions/handler.HardwareRequest"
                },
                "homeowner": {
                    "$ref": "#/definitions/handler.HomeownerRequest"
                },
                "latitude": {
                    "type": "number",
                    "example": 37.7749
                },
                "longitude": {
                    "type": "number",
                    "example": -122.4194
                },
                "lse_id": {
                    "type": "integer",
                    "example": 1
                },
                "mode": {
                    "type": "string",
                    "example": "max"
                },
                "period": {
                    "type": "string",
                    "example": "month"
                },
                "target_solar_offset": {
                    "type": "integer",
                    "example": 100
                },
                "unit": {
                    "type": "string",
                    "example": "kwh"
                }
            }
        },
        "handler.Create3DProjectResponse": {
            "type": "object",
            "properties": {
                "annual_production": {
                    "type": "number",
                    "example": 15000
                },
                "annual_savings": {
                    "type": "number",
                    "example": 2500
                },
                "estimated_cost": {
                    "type": "number",
                    "example": 25000
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "lead_id": {
                    "type": "integer",
                    "example": 456
                },
                "message": {
                    "type": "string",
                    "example": "3D project created successfully. Processing in background."
                },
                "status": {
                    "type": "string",
                    "example": "processing"
                },
                "system_size": {
                    "type": "number",
                    "example": 10.5
                }
            }
        },
        "handler.CreateCompanyRequest": {
            "type": "object",
            "properties": {
                "baseline_adder": {
                    "type": "number",
                    "example": 100
                },
                "code": {
                    "type": "string",
                    "example": "ACME"
                },
                "description": {
                    "type": "string",
                    "example": "Leading solar company"
                },
                "display_name": {
                    "type": "string",
                    "example": "Acme Corporation"
                },
                "logo_path": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Acme Corp"
                },
                "sales_commission_default": {
                    "type": "number",
                    "example": 0.1
                },
                "sales_commission_max": {
                    "type": "number",
                    "example": 0.15
                },
                "sales_commission_min": {
                    "type": "number",
                    "example": 0.05
                },
                "slug": {
                    "type": "string",
                    "example": "acme-corp"
                }
            }
        },
        "handler.CreateDealRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Solar Street, CA 90210"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "consumption_kwh": {
                    "type": "integer",
                    "example": 12000
                },
                "document_id": {
                    "type": "integer",
                    "example": 1
                },
                "financing_option_id": {
                    "type": "integer",
                    "example": 1
                },
                "financing_provider": {
                    "type": "string",
                    "example": "SunPower Financial"
                },
                "hardware_cost": {
                    "type": "number",
                    "example": 15000
                },
                "homeowner_id": {
                    "type": "integer",
                    "example": 2
                },
                "installation_cost": {
                    "type": "number",
                    "example": 8000
                },
                "panel_count": {
                    "type": "integer",
                    "example": 30
                },
                "production_kwh": {
                    "type": "integer",
                    "example": 13000
                },
                "profit": {
                    "type": "number",
                    "example": 5000
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_commission_cost": {
                    "type": "number",
                    "example": 2000
                },
                "sales_id": {
                    "type": "integer",
                    "example": 1
                },
                "system_size": {
                    "type": "number",
                    "example": 10.5
                },
                "target_epc": {
                    "type": "number",
                    "example": 2.5
                },
                "total_cost": {
                    "type": "number",
                    "example": 25000
                }
            }
        },
        "handler.DealResponse": {
            "type": "object",
            "properties": {
                "deal": {
                    "$ref": "#/definitions/models.Deal"
                }
            }
        },
        "handler.DealsResponse": {
            "type": "object",
            "properties": {
                "deals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Deal"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "handler.HardwareRequest": {
            "type": "object",
            "properties": {
                "inverter_id": {
                    "type": "integer",
                    "example": 1
                },
                "panel_id": {
                    "type": "integer",
                    "example": 1
                },
                "storage_id": {
                    "type": "integer",
                    "example": 1
                },
                "storage_quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "handler.HomeownerRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "homeowner@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handler.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "baseline": {
                    "type": "number",
                    "example": 1000
                },
                "baseline_adder": {
                    "type": "number",
                    "example": 100
                },
                "baseline_adder_pct_sales_comms": {
                    "type": "integer",
                    "example": 10
                },
                "code": {
                    "type": "string",
                    "example": "ACME"
                },
                "contract_tag": {
                    "type": "string",
                    "example": "STANDARD"
                },
                "description": {
                    "type": "string",
                    "example": "Leading solar company"
                },
                "display_name": {
                    "type": "string",
                    "example": "Acme Corporation"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "logo_path": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Acme Corp"
                },
                "sales_commission_default": {
                    "type": "number",
                    "example": 0.1
                },
                "sales_commission_max": {
                    "type": "number",
                    "example": 0.15
                },
                "sales_commission_min": {
                    "type": "number",
                    "example": 0.05
                },
                "slug": {
                    "type": "string",
                    "example": "acme-corp"
                }
            }
        },
        "handler.UpdateDealRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Solar Street, CA 90210"
                },
                "approved_at": {
                    "type": "string",
                    "example": "2025-10-02T10:00:00Z"
                },
                "consumption_kwh": {
                    "type": "integer",
                    "example": 12000
                },
                "document_id": {
                    "type": "integer",
                    "example": 1
                },
                "financing_option_id": {
                    "type": "integer",
                    "example": 1
                },
                "financing_provider": {
                    "type": "string",
                    "example": "SunPower Financial"
                },
                "hardware_cost": {
                    "type": "number",
                    "example": 15000
                },
                "installation_cost": {
                    "type": "number",
                    "example": 8000
                },
                "installed_at": {
                    "type": "string",
                    "example": "2025-10-15T10:00:00Z"
                },
                "panel_count": {
                    "type": "integer",
                    "example": 30
                },
                "production_kwh": {
                    "type": "integer",
                    "example": 13000
                },
                "profit": {
                    "type": "number",
                    "example": 5000
                },
                "sales_commission_cost": {
                    "type": "number",
                    "example": 2000
                },
                "signed_at": {
                    "type": "string",
                    "example": "2025-10-01T10:00:00Z"
                },
                "status": {
                    "type": "string",
                    "example": "approved"
                },
                "system_size": {
                    "type": "number",
                    "example": 10.5
                },
                "target_epc": {
                    "type": "number",
                    "example": 2.5
                },
                "total_cost": {
                    "type": "number",
                    "example": 25000
                }
            }
        },
        "models.Company": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "integer",
                    "example": 1
                },
                "baseline": {
                    "type": "number",
                    "example": 1000
                },
                "baseline_adder": {
                    "type": "number",
                    "example": 100
                },
                "baseline_adder_pct_sales_comms": {
                    "type": "integer",
                    "example": 10
                },
                "code": {
                    "type": "string",
                    "example": "ACME"
                },
                "contract_tag": {
                    "type": "string",
                    "example": "STANDARD"
                },
                "created_at": {
                    "type": "string"
                },
                "credits": {
                    "type": "integer",
                    "example": 1000
                },
                "custom_commissions": {
                    "type": "boolean",
                    "example": false
                },
                "description": {
                    "type": "string",
                    "example": "Leading solar company"
                },
                "display_name": {
                    "type": "string",
                    "example": "Acme Corporation"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "logo_path": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Acme Corp"
                },
                "pricing_mode": {
                    "type": "integer",
                    "example": 0
                },
                "referred_by_user_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_commission_default": {
                    "type": "number",
                    "example": 0.1
                },
                "sales_commission_max": {
                    "type": "number",
                    "example": 0.15
                },
                "sales_commission_min": {
                    "type": "number",
                    "example": 0.05
                },
                "slug": {
                    "type": "string",
                    "example": "acme-corp"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Deal": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Additional Info",
                    "type": "string",
                    "example": "123 Solar Street, CA 90210"
                },
                "approved_at": {
                    "type": "string",
                    "example": "2025-10-02T10:00:00Z"
                },
                "archive": {
                    "description": "Status and Metadata",
                    "type": "boolean",
                    "example": false
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "consumption_kwh": {
                    "type": "integer",
                    "example": 12000
                },
                "created_at": {
                    "type": "string"
                },
                "document_id": {
                    "type": "integer",
                    "example": 1
                },
                "financing_option_id": {
                    "type": "integer",
                    "example": 1
                },
                "financing_provider": {
                    "description": "Financial Details",
                    "type": "string",
                    "example": "SunPower Financial"
                },
                "hardware_cost": {
                    "type": "number",
                    "example": 15000
                },
                "hardware_id": {
                    "type": "integer",
                    "example": 1
                },
                "homeowner_id": {
                    "type": "integer",
                    "example": 2
                },
                "id": {
                    "type": "integer"
                },
                "installation_cost": {
                    "type": "number",
                    "example": 8000
                },
                "installed_at": {
                    "type": "string",
                    "example": "2025-10-15T10:00:00Z"
                },
                "inverter_id": {
                    "type": "integer",
                    "example": 1
                },
                "lead_id": {
                    "description": "Foreign Keys",
                    "type": "integer",
                    "example": 1
                },
                "panel_count": {
                    "type": "integer",
                    "example": 30
                },
                "panel_id": {
                    "type": "integer",
                    "example": 1
                },
                "production_kwh": {
                    "type": "integer",
                    "example": 13000
                },
                "profit": {
                    "type": "number",
                    "example": 5000
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_commission_cost": {
                    "type": "number",
                    "example": 2000
                },
                "sales_id": {
                    "type": "integer",
                    "example": 1
                },
                "signed_at": {
                    "type": "string",
                    "example": "2025-10-01T10:00:00Z"
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                },
                "system_id": {
                    "type": "integer",
                    "example": 1
                },
                "system_size": {
                    "description": "System Details",
                    "type": "number",
                    "example": 10.5
                },
                "target_epc": {
                    "type": "number",
                    "example": 2.5
                },
                "total_cost": {
                    "type": "number",
                    "example": 25000
                },
                "updated_at": {
                    "type": "string"
                },
                "utility_id": {
                    "type": "integer",
                    "example": 1
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Sun Ready API",
	Description:      "API for Sun Ready project management system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
