basePath: /api
definitions:
  client.Adder:
    properties:
      Active:
        type: boolean
      AllSystemSizes:
        type: boolean
      Category:
        type: string
      CategoryID:
        type: integer
      CategoryName:
        type: string
      CompanyID:
        type: integer
      Cost:
        type: number
      CostType:
        type: string
      CreatedAt:
        type: string
      CustomPrice:
        type: number
      ExpiredAt: {}
      ID:
        type: integer
      IsAutomatic:
        type: boolean
      LenderMapping:
        type: string
      MaxSystemSize:
        type: integer
      MinSystemSize:
        type: integer
      Name:
        type: string
      Quantity:
        type: integer
      States:
        items:
          type: string
        type: array
      UpdatedAt:
        type: string
    type: object
  client.PriceBreakdown:
    properties:
      base_price_per_watt:
        type: number
      default_base_price:
        type: number
      items:
        items:
          $ref: '#/definitions/client.PriceItem'
        type: array
      minimum_base_price:
        type: number
      total_amount:
        type: number
      total_amount_without_dealer_fee:
        type: number
      total_fee:
        type: number
      total_price_per_watt:
        type: number
      total_price_per_watt_financed:
        type: number
    type: object
  client.PriceItem:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  client.Status3DProjectResponse:
    properties:
      adders:
        items:
          $ref: '#/definitions/client.Adder'
        type: array
      inverter: {}
      panel: {}
      price_breakdown:
        $ref: '#/definitions/client.PriceBreakdown'
      storage: {}
    type: object
  handler.AddCompanyRequest:
    properties:
      company_name:
        example: New Solar Company
        type: string
      main_user_id:
        example: 1
        type: integer
    type: object
  handler.AddressRequest:
    properties:
      Postalcode:
        example: "94102"
        type: string
      city:
        example: San Francisco
        type: string
      country:
        example: USA
        type: string
      state:
        example: CA
        type: string
      street:
        example: 123 Solar Street
        type: string
    type: object
  handler.AuthResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user: {}
    type: object
  handler.CompaniesResponse:
    properties:
      companies:
        items:
          $ref: '#/definitions/models.Company'
        type: array
      total:
        type: integer
    type: object
  handler.CompanyResponse:
    properties:
      company:
        $ref: '#/definitions/models.Company'
    type: object
  handler.Create3DProjectRequest:
    description: Request body for creating a 3D solar project with energy calculations
    properties:
      address:
        $ref: '#/definitions/handler.AddressRequest'
      consumption:
        example:
        - 800
        - 850
        - 900
        - 950
        - 1000
        - 1050
        - 1100
        - 1150
        - 1200
        - 1250
        - 1300
        - 1350
        items:
          type: integer
        type: array
      hardware:
        $ref: '#/definitions/handler.HardwareRequest'
      homeowner:
        $ref: '#/definitions/handler.HomeownerRequest'
      latitude:
        example: 37.7749
        type: number
      longitude:
        example: -122.4194
        type: number
      lse_id:
        example: 1
        type: integer
      mode:
        example: max
        type: string
      period:
        example: month
        type: string
      target_solar_offset:
        example: 100
        type: integer
      unit:
        example: kwh
        type: string
    type: object
  handler.Create3DProjectResponse:
    properties:
      annual_production:
        example: 15000
        type: number
      annual_savings:
        example: 2500
        type: number
      estimated_cost:
        example: 25000
        type: number
      id:
        example: 123
        type: integer
      lead_id:
        example: 456
        type: integer
      message:
        example: 3D project created successfully. Processing in background.
        type: string
      status:
        example: processing
        type: string
      system_size:
        example: 10.5
        type: number
    type: object
  handler.CreateCompanyRequest:
    properties:
      baseline_adder:
        example: 100
        type: number
      code:
        example: ACME
        type: string
      description:
        example: Leading solar company
        type: string
      display_name:
        example: Acme Corporation
        type: string
      logo_path:
        example: https://example.com/logo.png
        type: string
      name:
        example: Acme Corp
        type: string
      sales_commission_default:
        example: 0.1
        type: number
      sales_commission_max:
        example: 0.15
        type: number
      sales_commission_min:
        example: 0.05
        type: number
      slug:
        example: acme-corp
        type: string
    type: object
  handler.CreateDealRequest:
    properties:
      address:
        example: 123 Solar Street, CA 90210
        type: string
      company_id:
        example: 1
        type: integer
      consumption_kwh:
        example: 12000
        type: integer
      document_id:
        example: 1
        type: integer
      financing_option_id:
        example: 1
        type: integer
      financing_provider:
        example: SunPower Financial
        type: string
      hardware_cost:
        example: 15000
        type: number
      homeowner_id:
        example: 2
        type: integer
      installation_cost:
        example: 8000
        type: number
      panel_count:
        example: 30
        type: integer
      production_kwh:
        example: 13000
        type: integer
      profit:
        example: 5000
        type: number
      project_id:
        example: 1
        type: integer
      sales_commission_cost:
        example: 2000
        type: number
      sales_id:
        example: 1
        type: integer
      system_size:
        example: 10.5
        type: number
      target_epc:
        example: 2.5
        type: number
      total_cost:
        example: 25000
        type: number
    type: object
  handler.DealResponse:
    properties:
      deal:
        $ref: '#/definitions/models.Deal'
    type: object
  handler.DealsResponse:
    properties:
      deals:
        items:
          $ref: '#/definitions/models.Deal'
        type: array
      total:
        type: integer
    type: object
  handler.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handler.HardwareRequest:
    properties:
      inverter_id:
        example: 1
        type: integer
      panel_id:
        example: 1
        type: integer
      storage_id:
        example: 1
        type: integer
      storage_quantity:
        example: 2
        type: integer
    type: object
  handler.HomeownerRequest:
    properties:
      email:
        example: homeowner@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      phone:
        example: "+1234567890"
        type: string
    type: object
  handler.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      company_id:
        example: 1
        type: integer
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: password123
        type: string
    type: object
  handler.UpdateCompanyRequest:
    properties:
      baseline:
        example: 1000
        type: number
      baseline_adder:
        example: 100
        type: number
      baseline_adder_pct_sales_comms:
        example: 10
        type: integer
      code:
        example: ACME
        type: string
      contract_tag:
        example: STANDARD
        type: string
      description:
        example: Leading solar company
        type: string
      display_name:
        example: Acme Corporation
        type: string
      is_active:
        example: true
        type: boolean
      logo_path:
        example: https://example.com/logo.png
        type: string
      name:
        example: Acme Corp
        type: string
      sales_commission_default:
        example: 0.1
        type: number
      sales_commission_max:
        example: 0.15
        type: number
      sales_commission_min:
        example: 0.05
        type: number
      slug:
        example: acme-corp
        type: string
    type: object
  handler.UpdateDealRequest:
    properties:
      address:
        example: 123 Solar Street, CA 90210
        type: string
      approved_at:
        example: "2025-10-02T10:00:00Z"
        type: string
      consumption_kwh:
        example: 12000
        type: integer
      document_id:
        example: 1
        type: integer
      financing_option_id:
        example: 1
        type: integer
      financing_provider:
        example: SunPower Financial
        type: string
      hardware_cost:
        example: 15000
        type: number
      installation_cost:
        example: 8000
        type: number
      installed_at:
        example: "2025-10-15T10:00:00Z"
        type: string
      panel_count:
        example: 30
        type: integer
      production_kwh:
        example: 13000
        type: integer
      profit:
        example: 5000
        type: number
      sales_commission_cost:
        example: 2000
        type: number
      signed_at:
        example: "2025-10-01T10:00:00Z"
        type: string
      status:
        example: approved
        type: string
      system_size:
        example: 10.5
        type: number
      target_epc:
        example: 2.5
        type: number
      total_cost:
        example: 25000
        type: number
    type: object
  models.Company:
    properties:
      admin_id:
        example: 1
        type: integer
      baseline:
        example: 1000
        type: number
      baseline_adder:
        example: 100
        type: number
      baseline_adder_pct_sales_comms:
        example: 10
        type: integer
      code:
        example: ACME
        type: string
      contract_tag:
        example: STANDARD
        type: string
      created_at:
        type: string
      credits:
        example: 1000
        type: integer
      custom_commissions:
        example: false
        type: boolean
      description:
        example: Leading solar company
        type: string
      display_name:
        example: Acme Corporation
        type: string
      id:
        type: integer
      is_active:
        example: true
        type: boolean
      logo_path:
        example: https://example.com/logo.png
        type: string
      name:
        example: Acme Corp
        type: string
      pricing_mode:
        example: 0
        type: integer
      referred_by_user_id:
        example: 1
        type: integer
      sales_commission_default:
        example: 0.1
        type: number
      sales_commission_max:
        example: 0.15
        type: number
      sales_commission_min:
        example: 0.05
        type: number
      slug:
        example: acme-corp
        type: string
      updated_at:
        type: string
    type: object
  models.Deal:
    properties:
      address:
        description: Additional Info
        example: 123 Solar Street, CA 90210
        type: string
      approved_at:
        example: "2025-10-02T10:00:00Z"
        type: string
      archive:
        description: Status and Metadata
        example: false
        type: boolean
      company_id:
        example: 1
        type: integer
      consumption_kwh:
        example: 12000
        type: integer
      created_at:
        type: string
      document_id:
        example: 1
        type: integer
      financing_option_id:
        example: 1
        type: integer
      financing_provider:
        description: Financial Details
        example: SunPower Financial
        type: string
      hardware_cost:
        example: 15000
        type: number
      hardware_id:
        example: 1
        type: integer
      homeowner_id:
        example: 2
        type: integer
      id:
        type: integer
      installation_cost:
        example: 8000
        type: number
      installed_at:
        example: "2025-10-15T10:00:00Z"
        type: string
      inverter_id:
        example: 1
        type: integer
      lead_id:
        description: Foreign Keys
        example: 1
        type: integer
      panel_count:
        example: 30
        type: integer
      panel_id:
        example: 1
        type: integer
      production_kwh:
        example: 13000
        type: integer
      profit:
        example: 5000
        type: number
      project_id:
        example: 1
        type: integer
      sales_commission_cost:
        example: 2000
        type: number
      sales_id:
        example: 1
        type: integer
      signed_at:
        example: "2025-10-01T10:00:00Z"
        type: string
      status:
        example: pending
        type: string
      system_id:
        example: 1
        type: integer
      system_size:
        description: System Details
        example: 10.5
        type: number
      target_epc:
        example: 2.5
        type: number
      total_cost:
        example: 25000
        type: number
      updated_at:
        type: string
      utility_id:
        example: 1
        type: integer
      uuid:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@sunready.com
    name: API Support
  description: API for Sun Ready project management system
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Sun Ready API
  version: "1.0"
paths:
  /api/projects/3d:
    post:
      consumes:
      - application/json
      description: Creates a 3D model from Google Earth data and calculates energy
        requirements and costs
      parameters:
      - description: Project details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.Create3DProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Create3DProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a 3D solar project with energy calculations
      tags:
      - projects
  /api/projects/3d/{id}:
    get:
      description: Retrieves the status and details of a 3D solar project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: House ID
        in: query
        name: house_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response structure from LightFusion API
          schema:
            $ref: '#/definitions/client.Status3DProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get 3D project status
      tags:
      - projects
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /companies:
    get:
      description: Get a list of all companies with optional filtering
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      - description: Filter by referred by user ID
        in: query
        name: referred_by_user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompaniesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all companies
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Create a new company with the provided details
      parameters:
      - description: Company details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateCompanyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new company
      tags:
      - companies
  /companies/{id}:
    delete:
      description: Delete a company by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete company
      tags:
      - companies
    get:
      description: Get a company by its ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get company by ID
      tags:
      - companies
    put:
      consumes:
      - application/json
      description: Update a company's details
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      - description: Company update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update company
      tags:
      - companies
  /companies/add:
    post:
      consumes:
      - application/json
      description: Creates a new company and migrates the main user and their descendants
        to it
      parameters:
      - description: Company and user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AddCompanyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Add company with user migration
      tags:
      - companies
  /companies/all:
    get:
      description: Get all companies without pagination with optional filtering
      parameters:
      - description: Filter by referred by user ID
        in: query
        name: referred_by_user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompaniesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all companies
      tags:
      - companies
  /companies/slug/{slug}:
    get:
      description: Get a company by its slug
      parameters:
      - description: Company Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get company by slug
      tags:
      - companies
  /deals:
    get:
      description: Get a list of all deals with pagination
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DealsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all deals
      tags:
      - deals
    post:
      consumes:
      - application/json
      description: Create a new deal with the provided details
      parameters:
      - description: Deal details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateDealRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.DealResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new deal
      tags:
      - deals
  /deals/{id}:
    delete:
      description: Delete a deal by ID
      parameters:
      - description: Deal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete deal
      tags:
      - deals
    get:
      description: Get a deal by its ID
      parameters:
      - description: Deal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DealResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get deal by ID
      tags:
      - deals
    put:
      consumes:
      - application/json
      description: Update a deal's details
      parameters:
      - description: Deal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Deal update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateDealRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DealResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update deal
      tags:
      - deals
  /deals/{id}/archive:
    post:
      description: Archive a deal by ID
      parameters:
      - description: Deal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Archive a deal
      tags:
      - deals
  /deals/{id}/unarchive:
    post:
      description: Unarchive a deal by ID
      parameters:
      - description: Deal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Unarchive a deal
      tags:
      - deals
  /deals/company/{company_id}:
    get:
      description: Get a list of deals for a specific company
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DealsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List deals by company
      tags:
      - deals
  /deals/company/{company_id}/signed:
    get:
      description: Get a list of signed deals for a company
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DealsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List signed deals
      tags:
      - deals
  /deals/uuid/{uuid}:
    get:
      description: Get a deal by its UUID
      parameters:
      - description: Deal UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DealResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get deal by UUID
      tags:
      - deals
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
